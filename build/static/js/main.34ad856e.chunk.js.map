{"version":3,"sources":["Constants.ts","MainScreen/ApplicationBar.tsx","MainScreen/SideMenu.tsx","MainScreen/Home.tsx","MainScreen/MenuItem.tsx","Answer/InsertClassNameToItemBody.ts","Answer/ItemBody.tsx","Answer/AnswersList/AnswerListItem.tsx","Answer/AnswersList/AnswerListItemLoading.tsx","Answer/AnswersList/AnswersList.tsx","MainScreen/index.tsx","serviceWorker.ts","errorPopper.tsx","store/Answers.ts","ProcessAxiosError.ts","store/BackgroundTasks.ts","store/index.ts","index.tsx","ConfigureStore.ts","MainScreen/Redux.svg","MainScreen/React.svg","MainScreen/TS.svg"],"names":["AnswerTags","selectedAnswers","typescript","questions","react","redux","useStyles","makeStyles","theme","createStyles","appBar","zIndex","drawer","breakpoints","up","width","marginLeft","ApplicationBar","classes","AppBar","position","className","Toolbar","Typography","variant","noWrap","overflowX","spacing","flexShrink","drawerPaper","toolbar","mixins","SideMenu","children","Drawer","paper","anchor","Divider","typography","margin","header","fontWeight","Home","Paper","paragraph","component","Link","href","MenuItem","to","name","Icon","ListItem","ListItemIcon","ListItemText","primary","InsertClassName","body","sub","replace","m","root","overflowWrap","ItemBody","bodyText","dangerouslySetInnerHTML","__html","marginBottom","heading","fontSize","pxToRem","fontWeightRegular","extensionDetail","flexDirection","expansionSummary","top","backgroundColor","boxShadow","contentsGridItem","flexGrow","minWidth","qaGridItem","padding","divider","height","link","alignSelf","AnswerListItem","question","answer","questionNum","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","Grid","container","direction","wrap","item","expansionPanel","lineralProgress","AnswerListItemLoading","disabled","answerList","overflowY","AnswerList","isLoading","answers","key","Object","entries","map","k","v","title","display","content","palette","background","default","left","MunuAndRoutes","menuName","src","TSLogo","alt","style","route","exact","path","render","ReactLogo","ReduxLogo","connect","state","CssBaseline","List","HomeIcon","values","Boolean","window","location","hostname","match","popper","card","media","paddingTop","answersError","error","useState","opened","setOpened","errorText","join","trim","useEffect","Popper","open","anchorEl","clientHeight","clientWidth","getBoundingClientRect","bottom","right","transition","TransitionProps","Fade","timeout","Card","CardHeader","action","IconButton","aria-label","onClick","CardContent","color","requestQAs","initalAnswersState","sagaActions","watchRequestAnswers","takeEvery","call","Axios","get","SOquestions","data","QuestionsWAcceptedA","items","filter","f","accepted_answer_id","i","SOanswers","reduce","p","e","question_id","toString","put","type","tag","response","status","statusText","error_message","request","message","rootSaga","reducers","undefined","all","Answers","store","sagaMiddleware","createSagaMiddleware","mw","applyMiddleware","allReducers","combineReducers","buildRootReducer","createStore","run","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.34ad856e.chunk.js","sourcesContent":["export const drawerWidth = 240;\r\n\r\nexport enum AnswerTags {\r\n  typescript = \"typescript\",\r\n  react = \"react\",\r\n  redux = \"redux\",\r\n}\r\n\r\nexport const selectedAnswers: {\r\n  [keys in AnswerTags]: {\r\n    questions: string[];\r\n  }\r\n} = {\r\n  typescript: {\r\n    questions: ['56749824', '57102790', '57086672', '56801439'] // 57210843 57181194\r\n  },\r\n  react: {\r\n    questions: ['56979012', '57132814',  '57066711', '56926343', '56893971', '56828846'] //58368409, 57085048\r\n  },\r\n  redux: {\r\n    questions: ['58449561', '57210138', '57197859', '57085611',  '57044956', '56694102'], //57142137, 56999154, 56999154, 56736168\r\n  }\r\n}","import React, { FC } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { drawerWidth } from '../Constants'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      }\r\n    }\r\n  }),\r\n);\r\n\r\nexport const ApplicationBar: FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          My best answers on StackOverflow\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}","import React, { FC } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { drawerWidth } from '../Constants'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      flexShrink: 0,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n\r\n\r\n      }\r\n    },\r\n    drawerPaper: {\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n\r\n      }\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n  }),\r\n);\r\n\r\nexport const SideMenu: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      anchor=\"left\"\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      {children}\r\n    </Drawer>\r\n  )\r\n}","import React, { FC } from 'react';\r\n\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      margin: '1rem',\r\n    },\r\n    header: {\r\n      fontWeight: 'bold',\r\n      margin: '1rem',\r\n    },\r\n  }),\r\n);\r\n\r\nexport const Home: FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper>\r\n      <Typography className={classes.header}>\r\n        Reasons to create this app\r\n      </Typography>\r\n      <Typography paragraph className={classes.typography}>\r\n        I carefully read Auth0 requirements for several jobs\r\n        and many time seen suggestion to give link for personal blog.\r\n        <br />\r\n        I'm not active blogger (may be yet?) so I've decided to share my best posts on StackOverflow.\r\n        They can be considered as short blog posts.\r\n        <br />\r\n        Also this app is located on glitch.com to showcase my development shills\r\n      </Typography>\r\n      <Typography className={classes.header}>\r\n        How does it works\r\n      </Typography>\r\n      <Typography paragraph className={classes.typography}>\r\n        This application will fetch selected posts from StackOverflow and present them\r\n        grouped by primary Tag.\r\n</Typography>\r\n      <Typography paragraph className={classes.typography} component='div'>\r\n        Application (SPA) is based on:\r\n      <ul>\r\n          <li>React</li>\r\n          <li>Typescript</li>\r\n          <li>Redux for storing state (questions and answers)</li>\r\n          <li>Redux-Saga for async actions like fetching posts</li>\r\n          <li>Storybook for developing components in isolation</li>\r\n          <li>Jest for unittesting</li>\r\n          <li>Material UI for building interface</li>\r\n        </ul>\r\n      </Typography>\r\n      <Typography paragraph className={classes.typography}>\r\n        The app is built from source, which is located on <Link href='https://github.com/fyodore82/so_showcase'>GitHub</Link>\r\n      </Typography>\r\n      <Typography paragraph className={classes.typography}>\r\n        Then app is built and put on Glitch where you can explore it.\r\n      </Typography>\r\n      <Typography paragraph className={classes.typography}>\r\n        Hope you enjoy it!\r\n      </Typography>\r\n    </Paper>\r\n  )\r\n}","import React, {FC, ComponentType} from 'react'\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface MenuItemOwnProps {\r\n    to: string;\r\n    name: string;\r\n    Icon: ComponentType;\r\n}\r\n\r\nexport const MenuItem: FC<MenuItemOwnProps> = ({to, name, Icon}) => (\r\n  <ListItem to={to} component={Link}>\r\n    <ListItemIcon><Icon /></ListItemIcon>\r\n    <ListItemText primary={name} />\r\n  </ListItem>\r\n)","export function InsertClassName(body: string): string {\r\n  const sub: { [index: string]: string } = {\r\n    '<code>': \"<code class='itembodycode'>\",\r\n    '<pre>': \"<pre class='itembodypre'>\",\r\n    '<p>': \"<p class='itembodyp'>\",\r\n    /*'&gt;': '>',\r\n    '&lt;': '<',\r\n    '&amp;': '&',\r\n    '&quot;': '\"',\r\n    '&apos;': \"'\",*/\r\n  }\r\n  return body.replace(/<\\w+>/g, m => {\r\n    return sub[m] ? sub[m] : m;\r\n  })\r\n}","import React, { FC } from 'react'\r\nimport './ItemBody.css'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { InsertClassName } from './InsertClassNameToItemBody'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      overflowWrap: 'break-word',\r\n    },\r\n  }),\r\n);\r\n\r\n\r\ninterface ItemBodyOwnProps {\r\n  bodyText: string;\r\n}\r\n\r\nexport const ItemBody: FC<ItemBodyOwnProps> = ({ bodyText }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    \r\n    <div\r\n    className={classes.root} \r\n    dangerouslySetInnerHTML={{__html: InsertClassName(bodyText)}}/>\r\n  )\r\n}","import React, { FC } from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport { ItemBody } from '../ItemBody'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginBottom: '4px',\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    extensionDetail: {\r\n      flexDirection: 'column',\r\n    },\r\n    expansionSummary: {\r\n      position: 'sticky',\r\n      top: 0,\r\n      backgroundColor: 'inherit',\r\n      boxShadow: '0px 2px gainsboro',\r\n    },\r\n    contentsGridItem: {\r\n      flexGrow: 1,\r\n      minWidth: 0,\r\n    },\r\n    qaGridItem: {\r\n      fontSize: 'xx-large',\r\n      padding: '1rem',\r\n    },\r\n    divider: {\r\n      height: '3px',\r\n      margin: '1rem',\r\n    },\r\n    link: {\r\n      alignSelf: 'flex-end',\r\n      margin: '0.5rem'\r\n    }\r\n  }),\r\n);\r\n\r\ninterface AnswerListItemOwnProps {\r\n  questionNum: string;\r\n  header: string;\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\nexport const AnswerListItem: FC<AnswerListItemOwnProps> = ({\r\n  header, question, answer, questionNum\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          className={classes.expansionSummary}\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading} dangerouslySetInnerHTML={{ '__html': header }} />\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className={classes.extensionDetail}>\r\n          <Grid container direction=\"column\" wrap=\"nowrap\">\r\n            <Grid className={classes.link} item>\r\n              <Link  href={`https://stackoverflow.com/questions/${questionNum}`}>Link to question on StackOverflow</Link>\r\n            </Grid>\r\n            <Grid item container direction=\"row\" wrap=\"nowrap\">\r\n              <Grid item className={classes.qaGridItem}>\r\n                Q\r\n                </Grid>\r\n              <Grid item className={classes.contentsGridItem}>\r\n                <ItemBody bodyText={question} />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Divider className={classes.divider} />\r\n            </Grid>\r\n            <Grid item container direction=\"row\" wrap=\"nowrap\">\r\n              <Grid item className={classes.qaGridItem}>\r\n                A\r\n                </Grid>\r\n              <Grid item className={classes.contentsGridItem}>\r\n                <ItemBody bodyText={answer} />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}","import React, { FC } from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport LineralProgress from '@material-ui/core/LinearProgress'\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginBottom: '4px',\r\n      width: '100%',\r\n    },\r\n    expansionPanel: {\r\n      backgroundColor: 'inherit !important',\r\n    },\r\n    lineralProgress: {\r\n      width: '100%',\r\n      height: '1rem',\r\n    },\r\n  }),\r\n);\r\n\r\nexport const AnswerListItemLoading: FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel disabled className={classes.expansionPanel}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <LineralProgress className={classes.lineralProgress} />\r\n        </ExpansionPanelSummary>\r\n      </ExpansionPanel>\r\n\r\n    </div>\r\n  );\r\n}","import React, { FC } from 'react'\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AnswerListItem } from './AnswerListItem'\r\nimport { AnswerListItemLoading } from './AnswerListItemLoading'\r\n\r\nimport { Answers } from '../../store/Answers'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    answerList: {\r\n      overflowY: 'auto',\r\n      overflowX: 'hidden',\r\n    },\r\n  }),\r\n);\r\n\r\ninterface AnswerListOwnProps {\r\n  isLoading: boolean;\r\n  answers?: Answers;\r\n}\r\n\r\nexport const AnswerList: FC<AnswerListOwnProps> = ({ isLoading, answers }) => {\r\n  const classes = useStyles()\r\n  return (<div className={classes.answerList}>\r\n    {isLoading ?\r\n      <>\r\n        <AnswerListItemLoading key={1} />\r\n        <AnswerListItemLoading key={2} />\r\n        <AnswerListItemLoading key={3} />\r\n      </>\r\n      :\r\n      answers && Object.entries(answers).map(([k, v]) => (\r\n        <AnswerListItem key={k} header={v.title} question={v.question} answer={v.answer} questionNum={k} />\r\n      ))}\r\n  </div>\r\n  )\r\n}","import React, { FC } from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ReduxLogo from './Redux.svg';\r\nimport ReactLogo from './React.svg';\r\nimport TSLogo from './TS.svg';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { AnswerTags, drawerWidth } from '../Constants'\r\nimport { ApplicationBar } from './ApplicationBar'\r\nimport { SideMenu } from './SideMenu'\r\nimport { Home } from './Home'\r\nimport { MenuItem } from './MenuItem'\r\nimport { AnswerList } from '../Answer/AnswersList/AnswersList'\r\nimport * as Answers from '../store/Answers';\r\nimport { ApplicationState } from '../store'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: theme.spacing(3),\r\n\r\n      height: '100%',\r\n      width: `calc(100% - ${theme.spacing(7) + 1}px)`,\r\n      left: theme.spacing(7) + 1,\r\n\r\n      [theme.breakpoints.up('sm')]: {\r\n        left: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n      },\r\n      top: 0,\r\n      position: \"absolute\",\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n  }),\r\n);\r\n\r\nconst ReactIcon: FC = () => (\r\n  <img src={ReactLogo} alt='' style={{ width: '24px' }} />\r\n)\r\n\r\nconst TSIcon: FC = () => (\r\n  <img src={TSLogo} alt='' style={{ width: '24px' }} />\r\n)\r\n\r\nconst ReduxIcon: FC = () => (\r\n  <img src={ReduxLogo} alt='' style={{ width: '24px' }} />\r\n)\r\n\r\nconst MunuAndRoutes: {\r\n  [keys in AnswerTags]: {\r\n    menuName: JSX.Element;\r\n    route: (isLoading: boolean, answers?: Answers.Answers) => JSX.Element;\r\n  }\r\n} = {\r\n  typescript: {\r\n    menuName: <MenuItem key='typescript' to='/typescript' name='TypeScript' Icon={TSIcon} />,\r\n    route: (isLoading, answers) => <Route key='typescript' exact path='/typescript' render={() => <AnswerList answers={answers} isLoading={isLoading} />} />,\r\n  },\r\n  react: {\r\n    menuName: <MenuItem key='react' to='/react' name='React' Icon={ReactIcon} />,\r\n    route: (isLoading, answers) => <Route key='react' exact path='/react' render={() => <AnswerList answers={answers} isLoading={isLoading} />} />,\r\n  },\r\n  redux: {\r\n    menuName: <MenuItem key='redux' to='/redux' name='Redux' Icon={ReduxIcon} />,\r\n    route: (isLoading, answers) => <Route key='redux' exact path='/redux' render={() => <AnswerList answers={answers} isLoading={isLoading} />} />,\r\n  },\r\n}\r\n\r\ntype MainScreenStateProps = Answers.AnswersState;\r\n\r\ntype MainScreenProps = MainScreenStateProps;\r\n\r\nexport const MainScreen: FC<MainScreenProps> = ({ isLoading, answers }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <ApplicationBar />\r\n      <SideMenu>\r\n        <List>\r\n          <MenuItem key='home' to='/' name='Home' Icon={HomeIcon} />\r\n          {Object.values(MunuAndRoutes).map(m => m.menuName)}\r\n        </List>\r\n      </SideMenu>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Switch>\r\n          {Object.entries(MunuAndRoutes).map(([k, v]) => v.route(isLoading, answers[k as AnswerTags]))}\r\n          <Route key='home' exact path='/' component={Home} />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect<MainScreenStateProps, {}, {}, ApplicationState>\r\n  (state => state.answers)(MainScreen)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { FC, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { ReferenceObject } from 'popper.js'\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { ApplicationState } from './store';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    popper: {\r\n      zIndex: 10000,\r\n    },\r\n    card: {\r\n      backgroundColor: 'lightpink',\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ErrorPopperStateProps {\r\n  answersError?: string\r\n}\r\n\r\ntype ErrorPopperProps = ErrorPopperStateProps;\r\n\r\nexport const ErrorPopper: FC<ErrorPopperProps> = ({ answersError }) => {\r\n\r\n  const classes = useStyles();\r\n  const ahchorEi: ReferenceObject = {\r\n    clientHeight: 100,\r\n    clientWidth: 200,\r\n    getBoundingClientRect: (): ClientRect => ({\r\n      bottom: 0,\r\n      right: 0, \r\n      top: 20,\r\n      left: 20,\r\n      height: 100,\r\n      width: 100,\r\n    }) \r\n  };\r\n  const [opened, setOpened] = useState(false);\r\n  \r\n  const errorText = [answersError].join(' ').trim();\r\n  useEffect(() => {\r\n    if (errorText)\r\n      setOpened(true);\r\n  }, [errorText]);\r\n\r\n  return (<Popper id='errorPopper' open={opened} anchorEl={ahchorEi} transition className={classes.popper}>\r\n    {({ TransitionProps }) => (\r\n      <Fade {...TransitionProps} timeout={350}>\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            action={\r\n              <IconButton aria-label=\"settings\" onClick={() => setOpened(false)}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n            }\r\n            title=\"Error\"\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {errorText}\r\n            </Typography>\r\n          </CardContent>\r\n         </Card>\r\n      </Fade>\r\n    )}\r\n  </Popper>)\r\n}\r\n//\r\n\r\nexport default connect<\r\n  ErrorPopperStateProps,\r\n  {},\r\n  {},\r\n  ApplicationState>\r\n  (state => ({\r\n    answersError: state.answers.error,\r\n  }), {})(ErrorPopper);","import { Reducer, Action } from 'redux';\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\nimport Axios from 'axios';\r\n\r\nimport { selectedAnswers, AnswerTags } from '../Constants'\r\nimport { ProcessAxiosError } from '../ProcessAxiosError'\r\n\r\nexport interface Answer {\r\n  title: string;\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\nexport type Answers = { [questionId: string]: Answer };\r\n\r\nexport interface AnswersState {\r\n  answers: { [keys in AnswerTags]?: Answers };\r\n  isLoading: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport const initalAnswersState: AnswersState = {\r\n  answers: {},\r\n  isLoading: false,\r\n}\r\n\r\ninterface SOQuestions {\r\n  items: {\r\n    \"question_id\": number;\r\n    \"accepted_answer_id\": number;\r\n    \"title\": string;\r\n    \"body\": string;\r\n  }[];\r\n}\r\n\r\ninterface SOAnswers {\r\n  items: {\r\n    \"body\": string;\r\n  }[];\r\n}\r\n\r\nexport const sagaActions = [\r\n  function* watchRequestAnswers() {\r\n    yield takeEvery<RequestQAsAction>('REQUEST_QA', requestQAs)\r\n  }\r\n];\r\n\r\nexport function* requestQAs() {\r\n  try {\r\n    let k: AnswerTags;\r\n    for (k in selectedAnswers) {\r\n      const { data: SOquestions }: { data: SOQuestions } = yield call(Axios.get,\r\n        `https://api.stackexchange.com/2.2/questions/${selectedAnswers[k].questions.join(';')}?site=stackoverflow&filter=withbody`)\r\n      const QuestionsWAcceptedA = SOquestions.items.filter(f => f.accepted_answer_id);\r\n        const { data: SOanswers }: { data: SOAnswers } = yield call(Axios.get,\r\n        `https://api.stackexchange.com/2.2/answers/${QuestionsWAcceptedA.map(i => i.accepted_answer_id).join(';')}?site=stackoverflow&filter=withbody`)\r\n      const answers: Answers = QuestionsWAcceptedA.reduce<Answers>((p, e, i) => {\r\n        p[e.question_id.toString()] = {\r\n          title: e.title,\r\n          question: e.body,\r\n          answer: SOanswers.items[i].body,\r\n        }\r\n        return p;\r\n      }, {});\r\n      yield put<ReceiveQAsAction>({ type: 'RECEIVE_QA', tag: k, answers })\r\n    }\r\n  }\r\n  catch (error) {\r\n    yield put<ReceiveQAsAction>({ type: 'RECEIVE_QA', error: ProcessAxiosError(error) });\r\n  }\r\n}\r\n\r\nexport interface RequestQAsAction extends Action { type: 'REQUEST_QA' }\r\nexport interface ReceiveQAsAction extends Action { type: 'RECEIVE_QA'; error?: string, answers?: Answers, tag?: AnswerTags }\r\n\r\ntype KnownActions = RequestQAsAction | ReceiveQAsAction;\r\n\r\nexport const reducer: Reducer<AnswersState, KnownActions> = (state = initalAnswersState, action) => {\r\n  switch (action.type) {\r\n    case 'REQUEST_QA':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        answers: {},\r\n        error: undefined,\r\n      }\r\n    case 'RECEIVE_QA':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        answers: action.tag && action.answers ? {\r\n          ...state.answers,\r\n          [action.tag]: {\r\n            ...state.answers[action.tag],\r\n            ...action.answers,\r\n          }\r\n        } : state.answers,\r\n        error: action.error,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { AxiosError } from 'axios';\r\n\r\nexport function ProcessAxiosError (error: AxiosError): string {\r\n  if (error.response) {\r\n    // The request was made and the server responded with a status code\r\n    // that falls out of the range of 2xx\r\n    return `Status ${error.response.status} (${error.response.statusText}), info: ${error.response.data && error.response.data.error_message}`;\r\n  } else if (error.request) {\r\n    // The request was made but no response was received\r\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n    // http.ClientRequest in node.js\r\n    return error.request;\r\n  } else {\r\n    // Something happened in setting up the request that triggered an Error\r\n    return error.message;\r\n  }\r\n  //return error.config;\r\n}","import { put } from 'redux-saga/effects'\r\nimport { RequestQAsAction } from './Answers'\r\n\r\nexport const sagaActions = [\r\n  function* requestQAs () {\r\n    yield put<RequestQAsAction>({ type: 'REQUEST_QA' });\r\n  } \r\n]","import { all, call } from 'redux-saga/effects'\r\nimport * as Answers from './Answers';\r\n\r\nimport { sagaActions } from './BackgroundTasks'\r\n\r\nexport interface ApplicationState {\r\n  answers: Answers.AnswersState;\r\n}\r\n\r\nexport const reducers = {\r\n  answers: Answers.reducer,\r\n}\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    ...Answers.sagaActions.map(call),\r\n    ...sagaActions.map(call),\r\n  ])\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainScreen from './MainScreen';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport ErrorPopper from './errorPopper';\n\nimport configureStore from './ConfigureStore'\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorPopper/>\n    <BrowserRouter>\n      <MainScreen />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { ApplicationState, reducers, rootSaga } from './store';\r\n\r\nexport default function configureStore() {\r\n\t// Build middleware. These are functions that can process the actions before they reach the store.\r\n\t//const windowIfDefined = typeof window === 'undefined' ? null : window as any;\r\n\t// If devTools is installed, connect to it\r\n\t//const devToolsExtension = windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__ as () => GenericStoreEnhancer;\r\n  //let enhst = devToolsExtension ? devToolsExtension() : <S>(next: StoreEnhancerStoreCreator<S>) => next;\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\tlet mw = applyMiddleware(sagaMiddleware);\r\n\t\r\n\t// Combine all reducers and instantiate the app-wide store instance\r\n\tconst allReducers = buildRootReducer(reducers);\r\n\r\n\tlet store = createStore(allReducers, mw); //compose(mw, enhst));\r\n\tsagaMiddleware.run(rootSaga);\r\n\r\n\treturn store;\r\n}\r\n\r\nfunction buildRootReducer(allReducers: any) {\r\n\treturn combineReducers<ApplicationState>({ ...allReducers/*, routing: routerReducer*/ });\r\n}","module.exports = __webpack_public_path__ + \"static/media/Redux.5c7392a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/React.8e26f220.svg\";","module.exports = __webpack_public_path__ + \"static/media/TS.7595fea1.svg\";"],"sourceRoot":""}